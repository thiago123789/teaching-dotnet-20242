// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NGPD.Manager.Data;

#nullable disable

namespace NGPD.Manager.Data.Migrations
{
    [DbContext(typeof(ManagerDbContext))]
    [Migration("20240711171155_adding disponibilidade table")]
    partial class addingdisponibilidadetable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NGPD.Manager.Entities.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("NGPD.Manager.Entities.Disponibilidade.Disponibilidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Disponibilidade");
                });

            modelBuilder.Entity("NGPD.Manager.Entities.Disponibilidade.Disponibilidade", b =>
                {
                    b.OwnsOne("NGPD.Manager.Entities.Disponibilidade.IntervaloTempo", "IntervaloTempo", b1 =>
                        {
                            b1.Property<Guid>("DisponibilidadeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<TimeSpan>("From")
                                .HasColumnType("time");

                            b1.Property<TimeSpan>("To")
                                .HasColumnType("time");

                            b1.HasKey("DisponibilidadeId");

                            b1.ToTable("Disponibilidade");

                            b1.WithOwner()
                                .HasForeignKey("DisponibilidadeId");

                            b1.OwnsOne("NGPD.Manager.Entities.Disponibilidade.DiaSemana", "DiaSemana", b2 =>
                                {
                                    b2.Property<Guid>("IntervaloTempoDisponibilidadeId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Id")
                                        .HasColumnType("int");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("IntervaloTempoDisponibilidadeId");

                                    b2.ToTable("Disponibilidade");

                                    b2.WithOwner()
                                        .HasForeignKey("IntervaloTempoDisponibilidadeId");
                                });

                            b1.Navigation("DiaSemana")
                                .IsRequired();
                        });

                    b.Navigation("IntervaloTempo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
